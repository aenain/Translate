- special_letters = { pl: %w[ą Ą ć Ć ę Ę ł Ł ń Ń ó Ó ś Ś ź Ź ż Ż], de: %w[ä Ä ö Ö ü Ü ß] }

#polish.language-box
  %ul.special-letters
    - special_letters[:pl].each do |letter|
      %li.clickable #{letter}

    %li.lang
      = image_tag 'flag-pl.png', class: 'flag'

  = text_area_tag :word, nil, lang: 'pl'

#german.language-box
  %ul.special-letters
    - special_letters[:de].each do |letter|
      %li.clickable #{letter}

    %li.lang
      = image_tag 'flag-de.png', class: 'flag'

  = text_area_tag :de, nil, lang: 'de'

:coffeescript
  $ () ->
    $('.language-box textarea').bind 'focus blur', () ->
      $(this).parent().toggleClass 'focus'

    autocompleteOptions =
      minLength: 2

      open: (event, ui) ->
        $(this).css({ marginBottom: '2px' })
        menu = $(this).next(".ui-autocomplete.ui-menu")
        menu.attr("style", "")

      close: (event, ui) ->
        $(this).css({ marginBottom: '' })

      focus: (event, ui) ->
        menu = $(this).next(".ui-autocomplete.ui-menu")
        menu.children(".focus").removeClass("focus")
        menu.children(".ui-menu-item:has(.ui-state-hover)").addClass("focus")

      source: (request, response) ->
        term = $(this.element[0]).val()

        $.getJSON '#{autocomplete_words_path}', { term: term, lang: $(this.element[0]).attr('lang') }, (data) ->
          response data

    $.extend autocompleteOptions, { appendTo: "#polish" }
    $("#word").autocomplete autocompleteOptions

    $.extend autocompleteOptions, { appendTo: "#german" }
    $("#de").autocomplete autocompleteOptions

    combinations = []

    for i in [1..9]
      combinations.push 'alt+' + i
      combinations.push 'alt+shift+' + i

    for combination in combinations
      $('.language-box textarea').bind 'keydown', combination, (event) ->
        $self = $(this)

        nth = Number event.data.match(/\d+$/)[0]
        nth = 2 * (nth - 1) + 1
        nth += 1 if /shift/.test(event.data)

        $letter = $self.prev('.special-letters').children('.clickable:nth-child(' + String(nth) + ')')

        if $letter?
          $letter.addClass('focus').delay(150).queue () ->
            $letter.removeClass('focus')
            $letter.dequeue()

          $letter.trigger('click')

        event.preventDefault()

    $('.language-box .special-letters .clickable').click () ->
      $textarea = $(this).parents('.language-box').children('textarea')

      replaceSelectionWithText { element: $textarea, text: $(this).text() }, () ->
        # autocomplete search has to be triggered (changing value of input doesn't automatically fires up autocomplete)
        $textarea.autocomplete('search')

    replaceSelectionWithText = (options, callback) ->
      element = options.element
      selection = element.caret().text

      text = element.caret().replace(options.text)
      options.element.val(text)

      # moves cursor to proper position (right after replacement)
      position = [element.caret().end - selection.length, 0].max() + options.text.length
      element.caret(position, position)

      callback() if callback?