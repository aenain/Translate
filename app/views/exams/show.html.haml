.title
  %h1
    %span#how-many-left= pluralize(@how_many_left, 'Questions')
    Left

.tile-vertical.top-8.bottom-9
  = word_box(@entry.question, id: 'question') do |question|
    %li.clickable
      = link_to question.name, question

.tile-vertical
  = form_for @entry, url: answer_exam_path, method: :post, remote: true do |f|
    = f.hidden_field :id
    #answer{ lang: @entry.answer_lang }

    .actions
      %h3.description Answer
      = f.submit 'Continue'

:coffeescript
  $ () ->
    updateWordBox = ($box, question) ->
      $box.find('.lang img.flag').attr { 'src': '/assets/flag-' + question.lang + '.png', 'alt': 'Flag-' + question.lang }
      $a = $box.find 'ul li a'
      $a.text question.name
      $a.attr 'href', $a.attr('href').replace(/\d+/, question.id)

    updateQuestionsCounter = (count) ->
      pluralized = if count == 1 then 'Question' else 'Questions'
      $('#how-many-left').text(count.toString() + ' ' + pluralized)

    class Form
      constructor: (@form) ->
        @submitButton = @form.find("input[type='submit']")
        this.preventDefaultSubmitOnClick()

      update: (options) ->
        self = this
        this.enableSubmit()

        if options.reset?
          action = '#{answer_exam_path}'.replace(/\d+/, options.id)
          @form.attr('action', action).find('#exam_entry_id').val(options.id)
          $('#answer').attr('lang', options.answer_lang).empty()

        $('#answer').languageBox { autocomplete: false, inputFieldNameFormat: 'exam_entry[answer]', width: '513px', height: '93px' }
        $('#answer textarea').focus().bind 'keydown.nextQuestion', 'return', (event) ->
          event.preventDefault()
          self.submit()

      submit: () ->
        self = this
        this.disableSubmit()

        $.post @form.attr('action'), @form.serialize(), (response) ->
          if response.redirect?
            window.location.href = response.redirect
            return false

          updateWordBox $('#question'), response.question
          self.update $.extend({ reset: true }, response.entry)
          updateQuestionsCounter response.how_many_left

      enableSubmit: () ->
        @submitButton.removeClass('disabled').prop('disabled', false)

      disableSubmit: () ->
        @submitButton.addClass('disabled').prop('disabled', true)

      preventDefaultSubmitOnClick: () ->
        self = this

        @submitButton.bind 'click', (event) ->
          event.preventDefault()
          self.submit()

    $form = $('.edit_exam_entry')

    form = new Form($form)
    form.update {}

    $form.find('textarea').focus()